{"version":3,"file":"static/js/380.c4a332d8.chunk.js","mappings":"6PAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4FAI7B,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,QAAQ,EAAE,IAIzBC,EAAYP,EAAAA,GAAAA,KAAWQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gNAUzB,SAAAM,GAAC,OAAIA,EAAEJ,MAAMK,OAAOC,KAAK,IAEvBC,GAAcZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAac,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,omBASlB,SAAAM,GAAC,OAAIA,EAAEJ,MAAMK,OAAOK,UAAU,IAWzC,SAAAN,GAAC,OAAIA,EAAEJ,MAAMK,OAAOC,KAAK,IAcvBK,GAAahB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAoBkB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,oHACnC,SAAAM,GAAC,OAAIA,EAAEJ,MAAMK,OAAOS,GAAG,IAOrBC,EAAMpB,EAAAA,GAAAA,OAAaqB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,ueAWrB,SAAAM,GAAC,OAAIA,EAAEJ,MAAMK,OAAOC,KAAK,IACd,SAAAF,GAAC,OAAIA,EAAEJ,MAAMK,OAAOY,KAAK,I,SChEzCC,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAAcC,EAAAA,KAAaC,MAAM,CACrCJ,MAAOG,EAAAA,KACJH,MAAM,yBACNK,SAAS,2BACZJ,SAAUE,EAAAA,KACPG,IAAI,EAAG,6BACPD,SAAS,2BAEC,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLZ,cAAeA,EACfa,iBAAkBV,EAClBW,SATiB,SAACC,EAAMC,GAC1BP,GAASQ,EAAAA,EAAAA,IAAMF,IACfC,EAAKE,WACP,EAM2BC,UAEvBC,EAAAA,EAAAA,MAAC5C,EAAU,CAAA2C,SAAA,EACTC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACER,EAAAA,EAAAA,KAAC3B,EAAS,CAAAmC,SAAC,UAAiB,KAACR,EAAAA,EAAAA,KAACtB,EAAW,CAACgC,KAAK,QAAQC,KAAK,WAC5DX,EAAAA,EAAAA,KAAClB,EAAU,CAAC6B,KAAK,QAAQC,UAAU,aAErCH,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACER,EAAAA,EAAAA,KAAC3B,EAAS,CAAAmC,SAAC,cACXR,EAAAA,EAAAA,KAACtB,EAAW,CAACgC,KAAK,WAAWC,KAAK,cAClCX,EAAAA,EAAAA,KAAClB,EAAU,CAAC6B,KAAK,WAAWC,UAAU,aAExCZ,EAAAA,EAAAA,KAACd,EAAG,CAACwB,KAAK,SAAQF,SAAC,eAI3B,CCnDe,SAASK,IACtB,OACEb,EAAAA,EAAAA,KAAA,OAAAQ,UACER,EAAAA,EAAAA,KAACH,EAAS,KAGhB,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login/Login.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${prop => prop.theme.spacing(5)};\n`;\n\n// Input\nexport const FieldName = styled.span`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.16;\n  letter-spacing: 0.15em;\n  font-weight: bold;\n  color: ${p => p.theme.colors.white};\n`;\nexport const StyledField = styled(Field)`\n  display: block;\n\n  width: 480px;\n  height: 60px;\n\n  border: 2px solid rgba(17, 17, 17, 0.05);\n  border-radius: 10px;\n  padding: 10px 30px;\n  background-color: ${p => p.theme.colors.inputField};\n  box-shadow: inset 0 2px 2px rgba(0, 0, 0, 0.35),\n    0 2px 0 rgba(255, 255, 255, 0.15);\n  outline: none;\n  transition: border 300ms;\n\n  font-weight: 400;\n  font-size: 25px;\n\n  line-height: 1.16;\n  letter-spacing: -0.02em;\n  color: ${p => p.theme.colors.white};\n\n  &:focus {\n    border: 2px solid #b8baf7;\n  }\n\n  &::placeholder {\n    font-size: 25px;\n    line-height: 1.21;\n    letter-spacing: -0.02em;\n    color: #ffffff99;\n  }\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.err};\n\n  margin-top: 8px;\n  font-size: 20px;\n  line-height: 1.21;\n  letter-spacing: 0.09em;\n`;\nexport const Btn = styled.button`\n  display: inline-block;\n  padding: 15px 25px;\n  font-size: 24px;\n  letter-spacing: 0.0275rem;\n\n  width: 200px;\n\n  text-align: center;\n  text-decoration: none;\n  outline: none;\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.bgBtn};\n  border: none;\n  border-radius: 15px;\n\n  margin-left: 140px;\n  margin-top: 20px;\n  margin-bottom: 40px;\n\n  &:hover {\n    background-color: #2468ca;\n  }\n\n  &:active {\n    transform: translateY(4px);\n    background-color: #3e8e41;\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nimport * as Yup from 'yup';\nimport {\n  Btn,\n  ErrMessage,\n  FieldName,\n  StyledField,\n  StyledForm,\n} from './LoginForm.styled';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('This field is required!'),\n  password: Yup.string()\n    .min(6, 'This field must be filled')\n    .required('Password is required!'),\n});\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n  const handlerLogin = (user, form) => {\n    dispatch(logIn(user));\n    form.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={loginSchema}\n      onSubmit={handlerLogin}\n    >\n      <StyledForm>\n        <label>\n          <FieldName>Email</FieldName> <StyledField type=\"email\" name=\"email\" />\n          <ErrMessage name=\"email\" component=\"span\" />\n        </label>\n        <label>\n          <FieldName>Password</FieldName>\n          <StyledField type=\"password\" name=\"password\" />\n          <ErrMessage name=\"password\" component=\"span\" />\n        </label>\n        <Btn type=\"submit\">Log In</Btn>\n      </StyledForm>\n    </Formik>\n  );\n}\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","prop","theme","spacing","FieldName","_templateObject2","p","colors","white","StyledField","Field","_templateObject3","inputField","ErrMessage","ErrorMessage","_templateObject4","err","Btn","_templateObject5","bgBtn","initialValues","email","password","loginSchema","Yup","shape","required","min","LoginForm","dispatch","useDispatch","_jsx","Formik","validationSchema","onSubmit","user","form","logIn","resetForm","children","_jsxs","type","name","component","Login"],"sourceRoot":""}